/**
 * Created by tech on 9/2/2015.
 */

Ext.define('Vega.model.Poh', {
    extend: 'Vega.model.Base',

    requires: [
        'Vega.model.Pod'
    ],

    fields: [
        { name: 'pono', type: 'int'},
        { name: 'orderDate', type: 'date', dateFormat: 'c' },
        { name: 'startDate', type: 'date', dateFormat: 'c' },
        { name: 'cancelDate', type: 'date', dateFormat: 'c' },
        { name: 'vendor', type: 'string', convert: tr},
        { name: 'status', type: 'string', convert: tr},
        { name: 'void', type: 'int'},
        { name: 'type', type: 'string', convert: tr},
        { name: 'customer', type: 'string', convert: tr},
        { name: 'onBoardDate', type: 'date', dateFormat: 'c' },
        { name: 'terms', type: 'string', convert: tr},
        { name: 'shipvia', type: 'string', convert: tr},
        { name: 'shipMark', type: 'string', convert: tr},
        { name: 'LCNo', type: 'string', convert: tr},
        { name: 'LCdate', type: 'date', dateFormat: 'c' },
        { name: 'BLNo', type: 'string', convert: tr},
        { name: 'BLDate', type: 'date', dateFormat: 'c' },
        { name: 'memo', type: 'string', convert: tr},
        { name: 'quota', type: 'float'},
        { name: 'duty', type: 'float'},
        { name: 'freight', type: 'float'},
        { name: 'createUser', type: 'string', convert: tr},
        { name: 'createDate', type: 'date', dateFormat: 'c' },
        { name: 'updateUser', type: 'string', convert: tr},
        { name: 'updateDate', type: 'date', dateFormat: 'c' },
        { name: 'userField1', type: 'string', convert: tr},
        { name: 'userField1H', type: 'string', convert: tr},
        { name: 'userField2', type: 'string', convert: tr},
        { name: 'userField2H', type: 'string', convert: tr},
        { name: 'userField3', type: 'string', convert: tr},
        { name: 'userField3H', type: 'string', convert: tr},
        { name: 'memoHouse', type: 'string', convert: tr},
        { name: 'SoNo', type: 'int'},
        { name: 'memocode', type: 'string', convert: tr},
        { name: 'processType', type: 'string', convert: tr},
        { name: 'cancelreason', type: 'string', convert: tr},
        { name: 'cancelReasonDate', type: 'date', dateFormat: 'c'},
        { name: 'etaDate', type: 'date', dateFormat: 'c'},
        { name: 'shipto', type: 'string', convert: tr},
        { name: 'paymentcode', type: 'string', convert: tr},
        { name: 'division', type: 'string', convert: tr},
        { name: 'warehouse', type: 'string', convert: tr},
        { name: 'systemUpdated', type: 'string', convert: tr},
        { name: 'controlNo', type: 'string', convert: tr},
        { name: 'changeETA', type: 'int'},
        { name: 'originalETA', type: 'date', dateFormat: 'c'},
        { name: 'cut_po', type: 'string', convert: tr},
        { name: 'cust_po', type: 'string', convert: tr},
        { name: 'user1', type: 'string', convert: tr},
        { name: 'user2', type: 'string', convert: tr},
        { name: 'user3', type: 'string', convert: tr},
        { name: 'user4', type: 'string', convert: tr},
        { name: 'userf_date', type: 'date', dateFormat: 'c' },
        { name: 'Yield', type: 'float'},
        { name: 'cutWidth', type: 'float'},
        { name: 'self', type: 'string', convert: tr},
        { name: 'contrast1', type: 'string', convert: tr},
        { name: 'contrast2', type: 'string', convert: tr},
        { name: 'contrast3', type: 'string', convert: tr},
        { name: 'fusing', type: 'string', convert: tr},
        { name: 'sendOut', type: 'string', convert: tr},
        { name: 'shipdate', type: 'date', dateFormat: 'c'},
        { name: 'parent_pono', type: 'int'},
        { name: 'house_only', type: 'string', convert: tr},
        { name: 'ordertype', type: 'string', convert: tr},
        { name: 'printcount', type: 'int'},
        { name: 'lastprintdate', type: 'date', dateFormat: 'c' },
        { name: 'desc_material', type: 'string', convert: tr},
        { name: 'desc_face', type: 'string', convert: tr},
        { name: 'desc_origin', type: 'string', convert: tr},
        { name: 'desc_cuttable', type: 'string', convert: tr},
        { name: 'desc_cutydge', type: 'string', convert: tr},
        { name: 'desc_markydge', type: 'string', convert: tr},
        { name: 'desc_lining', type: 'string', convert: tr},
        { name: 'desc_fusing', type: 'string', convert: tr},
        { name: 'fabric_alloc_date', type: 'date', dateFormat: 'c' },
        { name: 'fabric_pull_date', type: 'date', dateFormat: 'c' },
        { name: 'fit_approv_date', type: 'date', dateFormat: 'c' },
        { name: 'marker_no', type: 'string', convert: tr},
        { name: 'qb_batch_no', type: 'int'},
        { name: 'qb_batch_date', type: 'date', dateFormat: 'c' },
        { name: 'bulkpo', type: 'string', convert: tr},
        { name: 'bulkpono', type: 'int'},
        { name: 'insurance_expdate', type: 'date', dateFormat: 'c' },
        { name: 'sr_group', type: 'string', convert: tr},
        { name: 'custom_entry', type: 'string', convert: tr},
        { name: 'apply_c_profile', type: 'string', convert: tr},
        { name: 'vendor_shipto', type: 'string', convert: tr},
        { name: 'sto_sono', type: 'int'},
        { name: 'sto_invoiceno', type: 'int'},
        { name: 'PriceTicket', type: 'string', convert: tr},
        { name: 'sizeBreak', type: 'string', convert: tr},
        { name: 'hangTag', type: 'string', convert: tr},
        { name: 'hanger', type: 'string', convert: tr},
        { name: 'bundle', type: 'string', convert: tr},
        { name: 'polybag', type: 'string', convert: tr},
        { name: 'fabricinfo', type: 'string', convert: tr},
        { name: 'sentout', type: 'string', convert: tr},
        { name: 'cuttablewidth', type: 'string', convert: tr},
        { name: 'mainLabel', type: 'string', convert: tr},
        { name: 'careLabel', type: 'string', convert: tr},
        { name: 'fabricTesting', type: 'string', convert: tr},
        { name: 'trimMemo', type: 'string', convert: tr},
        { name: 'cutReleaseDate', type: 'date', dateFormat: 'c' },
        { name: 'cutFinishDate', type: 'date', dateFormat: 'c' },
        { name: 'sewingPickupDate', type: 'date', dateFormat: 'c' },
        { name: 'sewingDueDate', type: 'date', dateFormat: 'c' },
        { name: 'FOB', type: 'string', convert: tr},
        { name: 'sendout1', type: 'string', convert: tr},
        { name: 'sendout2', type: 'string', convert: tr},
        { name: 'sendout3', type: 'string', convert: tr},
        { name: 'sendout4', type: 'string', convert: tr},
        { name: 'sendout5', type: 'string', convert: tr},
        { name: 'fabricSt_no', type: 'string', convert: tr},
        { name: 'widthShrinkage', type: 'string', convert: tr},
        { name: 'lengthShrinkage', type: 'string', convert: tr},
        { name: 'sample', type: 'string', convert: tr},
        { name: 'delivery_season', type: 'string', convert: tr},
        { name: 'trade_term', type: 'string', convert: tr},
        { name: 'user5', type: 'string', convert: tr},
        { name: 'user6', type: 'string', convert: tr},
        { name: 'user7', type: 'string', convert: tr},
        { name: 'user8', type: 'string', convert: tr},
        { name: 'user9', type: 'string', convert: tr},
        { name: 'user10', type: 'string', convert: tr},
        { name: 'user11', type: 'string', convert: tr},
        { name: 'user12', type: 'string', convert: tr},
        { name: 'user13', type: 'string', convert: tr},
        { name: 'user14', type: 'string', convert: tr},
        { name: 'user15', type: 'string', convert: tr},
        { name: 'user16', type: 'string', convert: tr}
    ],

    //hasMany: 'Pod', // "entityName" for "Vega.model.Pod"

    idProperty: 'pono',

    proxy: {
        type: 'rest',
        url: '/api/Poh',

        pageParam: '',
        startParam: '',
        limitParam: '',

        reader: {
            type: 'json',
            rootProperty: 'data',
            totalProperty: 'total'
        },

        filterParam: 'filter'
    }
});

function tr(value, record){
    return Ext.String.trim(value);
}

function df(value, record){
    return value != undefined ? value.replace(/T.+/,'') : '';
}
